//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace LiveChatStarterKit.OperatorConsole.LiveChatWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OpServicesSoap", Namespace="http://focuscentric.com/")]
    public partial class OpServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LogInOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebSiteRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOperatorStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChatRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveChatRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChatMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsTypingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTypingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOnlineOperatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferChatOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasNewMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperatorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback VisitorPagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InviteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OpServices() {
            this.Url = global::LiveChatStarterKit.OperatorConsole.Properties.Settings.Default.OperatorConsole_LiveChatWS_Operator;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LogInCompletedEventHandler LogInCompleted;
        
        /// <remarks/>
        public event GetWebSiteRequestsCompletedEventHandler GetWebSiteRequestsCompleted;
        
        /// <remarks/>
        public event SetOperatorStatusCompletedEventHandler SetOperatorStatusCompleted;
        
        /// <remarks/>
        public event GetChatRequestsCompletedEventHandler GetChatRequestsCompleted;
        
        /// <remarks/>
        public event AcceptRequestCompletedEventHandler AcceptRequestCompleted;
        
        /// <remarks/>
        public event AddMessageCompletedEventHandler AddMessageCompleted;
        
        /// <remarks/>
        public event RemoveChatRequestCompletedEventHandler RemoveChatRequestCompleted;
        
        /// <remarks/>
        public event GetChatMessagesCompletedEventHandler GetChatMessagesCompleted;
        
        /// <remarks/>
        public event IsTypingCompletedEventHandler IsTypingCompleted;
        
        /// <remarks/>
        public event SetTypingCompletedEventHandler SetTypingCompleted;
        
        /// <remarks/>
        public event GetOnlineOperatorCompletedEventHandler GetOnlineOperatorCompleted;
        
        /// <remarks/>
        public event TransferChatCompletedEventHandler TransferChatCompleted;
        
        /// <remarks/>
        public event HasNewMessageCompletedEventHandler HasNewMessageCompleted;
        
        /// <remarks/>
        public event GetOperatorsCompletedEventHandler GetOperatorsCompleted;
        
        /// <remarks/>
        public event SaveCompletedEventHandler SaveCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event VisitorPagesCompletedEventHandler VisitorPagesCompleted;
        
        /// <remarks/>
        public event InviteCompletedEventHandler InviteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/LogIn", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Operator LogIn(string userName, string password) {
            object[] results = this.Invoke("LogIn", new object[] {
                        userName,
                        password});
            return ((Operator)(results[0]));
        }
        
        /// <remarks/>
        public void LogInAsync(string userName, string password) {
            this.LogInAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void LogInAsync(string userName, string password, object userState) {
            if ((this.LogInOperationCompleted == null)) {
                this.LogInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogInOperationCompleted);
            }
            this.InvokeAsync("LogIn", new object[] {
                        userName,
                        password}, this.LogInOperationCompleted, userState);
        }
        
        private void OnLogInOperationCompleted(object arg) {
            if ((this.LogInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogInCompleted(this, new LogInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/GetWebSiteRequests", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebRequest[] GetWebSiteRequests(System.DateTime lastRequestTime) {
            object[] results = this.Invoke("GetWebSiteRequests", new object[] {
                        lastRequestTime});
            return ((WebRequest[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWebSiteRequestsAsync(System.DateTime lastRequestTime) {
            this.GetWebSiteRequestsAsync(lastRequestTime, null);
        }
        
        /// <remarks/>
        public void GetWebSiteRequestsAsync(System.DateTime lastRequestTime, object userState) {
            if ((this.GetWebSiteRequestsOperationCompleted == null)) {
                this.GetWebSiteRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebSiteRequestsOperationCompleted);
            }
            this.InvokeAsync("GetWebSiteRequests", new object[] {
                        lastRequestTime}, this.GetWebSiteRequestsOperationCompleted, userState);
        }
        
        private void OnGetWebSiteRequestsOperationCompleted(object arg) {
            if ((this.GetWebSiteRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebSiteRequestsCompleted(this, new GetWebSiteRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/SetOperatorStatus", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetOperatorStatus(System.Guid key, int operatorId, bool isOnline) {
            this.Invoke("SetOperatorStatus", new object[] {
                        key,
                        operatorId,
                        isOnline});
        }
        
        /// <remarks/>
        public void SetOperatorStatusAsync(System.Guid key, int operatorId, bool isOnline) {
            this.SetOperatorStatusAsync(key, operatorId, isOnline, null);
        }
        
        /// <remarks/>
        public void SetOperatorStatusAsync(System.Guid key, int operatorId, bool isOnline, object userState) {
            if ((this.SetOperatorStatusOperationCompleted == null)) {
                this.SetOperatorStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOperatorStatusOperationCompleted);
            }
            this.InvokeAsync("SetOperatorStatus", new object[] {
                        key,
                        operatorId,
                        isOnline}, this.SetOperatorStatusOperationCompleted, userState);
        }
        
        private void OnSetOperatorStatusOperationCompleted(object arg) {
            if ((this.SetOperatorStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOperatorStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/GetChatRequests", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChatRequest[] GetChatRequests(System.Guid key, Operator op) {
            object[] results = this.Invoke("GetChatRequests", new object[] {
                        key,
                        op});
            return ((ChatRequest[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChatRequestsAsync(System.Guid key, Operator op) {
            this.GetChatRequestsAsync(key, op, null);
        }
        
        /// <remarks/>
        public void GetChatRequestsAsync(System.Guid key, Operator op, object userState) {
            if ((this.GetChatRequestsOperationCompleted == null)) {
                this.GetChatRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChatRequestsOperationCompleted);
            }
            this.InvokeAsync("GetChatRequests", new object[] {
                        key,
                        op}, this.GetChatRequestsOperationCompleted, userState);
        }
        
        private void OnGetChatRequestsOperationCompleted(object arg) {
            if ((this.GetChatRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChatRequestsCompleted(this, new GetChatRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/AcceptRequest", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AcceptRequest(System.Guid key, System.Guid chatId, int operatorId) {
            object[] results = this.Invoke("AcceptRequest", new object[] {
                        key,
                        chatId,
                        operatorId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptRequestAsync(System.Guid key, System.Guid chatId, int operatorId) {
            this.AcceptRequestAsync(key, chatId, operatorId, null);
        }
        
        /// <remarks/>
        public void AcceptRequestAsync(System.Guid key, System.Guid chatId, int operatorId, object userState) {
            if ((this.AcceptRequestOperationCompleted == null)) {
                this.AcceptRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptRequestOperationCompleted);
            }
            this.InvokeAsync("AcceptRequest", new object[] {
                        key,
                        chatId,
                        operatorId}, this.AcceptRequestOperationCompleted, userState);
        }
        
        private void OnAcceptRequestOperationCompleted(object arg) {
            if ((this.AcceptRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptRequestCompleted(this, new AcceptRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/AddMessage", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddMessage(System.Guid key, ChatMessage msg) {
            this.Invoke("AddMessage", new object[] {
                        key,
                        msg});
        }
        
        /// <remarks/>
        public void AddMessageAsync(System.Guid key, ChatMessage msg) {
            this.AddMessageAsync(key, msg, null);
        }
        
        /// <remarks/>
        public void AddMessageAsync(System.Guid key, ChatMessage msg, object userState) {
            if ((this.AddMessageOperationCompleted == null)) {
                this.AddMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMessageOperationCompleted);
            }
            this.InvokeAsync("AddMessage", new object[] {
                        key,
                        msg}, this.AddMessageOperationCompleted, userState);
        }
        
        private void OnAddMessageOperationCompleted(object arg) {
            if ((this.AddMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/RemoveChatRequest", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveChatRequest(System.Guid key, ChatRequest req) {
            this.Invoke("RemoveChatRequest", new object[] {
                        key,
                        req});
        }
        
        /// <remarks/>
        public void RemoveChatRequestAsync(System.Guid key, ChatRequest req) {
            this.RemoveChatRequestAsync(key, req, null);
        }
        
        /// <remarks/>
        public void RemoveChatRequestAsync(System.Guid key, ChatRequest req, object userState) {
            if ((this.RemoveChatRequestOperationCompleted == null)) {
                this.RemoveChatRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveChatRequestOperationCompleted);
            }
            this.InvokeAsync("RemoveChatRequest", new object[] {
                        key,
                        req}, this.RemoveChatRequestOperationCompleted, userState);
        }
        
        private void OnRemoveChatRequestOperationCompleted(object arg) {
            if ((this.RemoveChatRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveChatRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/GetChatMessages", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChatMessage[] GetChatMessages(System.Guid key, System.Guid chatId, long lastCheck) {
            object[] results = this.Invoke("GetChatMessages", new object[] {
                        key,
                        chatId,
                        lastCheck});
            return ((ChatMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChatMessagesAsync(System.Guid key, System.Guid chatId, long lastCheck) {
            this.GetChatMessagesAsync(key, chatId, lastCheck, null);
        }
        
        /// <remarks/>
        public void GetChatMessagesAsync(System.Guid key, System.Guid chatId, long lastCheck, object userState) {
            if ((this.GetChatMessagesOperationCompleted == null)) {
                this.GetChatMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChatMessagesOperationCompleted);
            }
            this.InvokeAsync("GetChatMessages", new object[] {
                        key,
                        chatId,
                        lastCheck}, this.GetChatMessagesOperationCompleted, userState);
        }
        
        private void OnGetChatMessagesOperationCompleted(object arg) {
            if ((this.GetChatMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChatMessagesCompleted(this, new GetChatMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/IsTyping", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsTyping(string chatId, bool isOperator) {
            object[] results = this.Invoke("IsTyping", new object[] {
                        chatId,
                        isOperator});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsTypingAsync(string chatId, bool isOperator) {
            this.IsTypingAsync(chatId, isOperator, null);
        }
        
        /// <remarks/>
        public void IsTypingAsync(string chatId, bool isOperator, object userState) {
            if ((this.IsTypingOperationCompleted == null)) {
                this.IsTypingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsTypingOperationCompleted);
            }
            this.InvokeAsync("IsTyping", new object[] {
                        chatId,
                        isOperator}, this.IsTypingOperationCompleted, userState);
        }
        
        private void OnIsTypingOperationCompleted(object arg) {
            if ((this.IsTypingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsTypingCompleted(this, new IsTypingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/SetTyping", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetTyping(string chatId, bool isOperator, bool typing) {
            this.Invoke("SetTyping", new object[] {
                        chatId,
                        isOperator,
                        typing});
        }
        
        /// <remarks/>
        public void SetTypingAsync(string chatId, bool isOperator, bool typing) {
            this.SetTypingAsync(chatId, isOperator, typing, null);
        }
        
        /// <remarks/>
        public void SetTypingAsync(string chatId, bool isOperator, bool typing, object userState) {
            if ((this.SetTypingOperationCompleted == null)) {
                this.SetTypingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTypingOperationCompleted);
            }
            this.InvokeAsync("SetTyping", new object[] {
                        chatId,
                        isOperator,
                        typing}, this.SetTypingOperationCompleted, userState);
        }
        
        private void OnSetTypingOperationCompleted(object arg) {
            if ((this.SetTypingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTypingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/GetOnlineOperator", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Operator[] GetOnlineOperator() {
            object[] results = this.Invoke("GetOnlineOperator", new object[0]);
            return ((Operator[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOnlineOperatorAsync() {
            this.GetOnlineOperatorAsync(null);
        }
        
        /// <remarks/>
        public void GetOnlineOperatorAsync(object userState) {
            if ((this.GetOnlineOperatorOperationCompleted == null)) {
                this.GetOnlineOperatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOnlineOperatorOperationCompleted);
            }
            this.InvokeAsync("GetOnlineOperator", new object[0], this.GetOnlineOperatorOperationCompleted, userState);
        }
        
        private void OnGetOnlineOperatorOperationCompleted(object arg) {
            if ((this.GetOnlineOperatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOnlineOperatorCompleted(this, new GetOnlineOperatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/TransferChat", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TransferChat(ChatRequest chatRequest) {
            this.Invoke("TransferChat", new object[] {
                        chatRequest});
        }
        
        /// <remarks/>
        public void TransferChatAsync(ChatRequest chatRequest) {
            this.TransferChatAsync(chatRequest, null);
        }
        
        /// <remarks/>
        public void TransferChatAsync(ChatRequest chatRequest, object userState) {
            if ((this.TransferChatOperationCompleted == null)) {
                this.TransferChatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferChatOperationCompleted);
            }
            this.InvokeAsync("TransferChat", new object[] {
                        chatRequest}, this.TransferChatOperationCompleted, userState);
        }
        
        private void OnTransferChatOperationCompleted(object arg) {
            if ((this.TransferChatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferChatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/HasNewMessage", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasNewMessage(System.Guid chatId, long lastMessageId) {
            object[] results = this.Invoke("HasNewMessage", new object[] {
                        chatId,
                        lastMessageId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasNewMessageAsync(System.Guid chatId, long lastMessageId) {
            this.HasNewMessageAsync(chatId, lastMessageId, null);
        }
        
        /// <remarks/>
        public void HasNewMessageAsync(System.Guid chatId, long lastMessageId, object userState) {
            if ((this.HasNewMessageOperationCompleted == null)) {
                this.HasNewMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasNewMessageOperationCompleted);
            }
            this.InvokeAsync("HasNewMessage", new object[] {
                        chatId,
                        lastMessageId}, this.HasNewMessageOperationCompleted, userState);
        }
        
        private void OnHasNewMessageOperationCompleted(object arg) {
            if ((this.HasNewMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasNewMessageCompleted(this, new HasNewMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/GetOperators", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Operator[] GetOperators(System.Guid key) {
            object[] results = this.Invoke("GetOperators", new object[] {
                        key});
            return ((Operator[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOperatorsAsync(System.Guid key) {
            this.GetOperatorsAsync(key, null);
        }
        
        /// <remarks/>
        public void GetOperatorsAsync(System.Guid key, object userState) {
            if ((this.GetOperatorsOperationCompleted == null)) {
                this.GetOperatorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperatorsOperationCompleted);
            }
            this.InvokeAsync("GetOperators", new object[] {
                        key}, this.GetOperatorsOperationCompleted, userState);
        }
        
        private void OnGetOperatorsOperationCompleted(object arg) {
            if ((this.GetOperatorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperatorsCompleted(this, new GetOperatorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/Save", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save(System.Guid key, Operator op) {
            object[] results = this.Invoke("Save", new object[] {
                        key,
                        op});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAsync(System.Guid key, Operator op) {
            this.SaveAsync(key, op, null);
        }
        
        /// <remarks/>
        public void SaveAsync(System.Guid key, Operator op, object userState) {
            if ((this.SaveOperationCompleted == null)) {
                this.SaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveOperationCompleted);
            }
            this.InvokeAsync("Save", new object[] {
                        key,
                        op}, this.SaveOperationCompleted, userState);
        }
        
        private void OnSaveOperationCompleted(object arg) {
            if ((this.SaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCompleted(this, new SaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/Delete", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete(System.Guid key, Operator op) {
            object[] results = this.Invoke("Delete", new object[] {
                        key,
                        op});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAsync(System.Guid key, Operator op) {
            this.DeleteAsync(key, op, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(System.Guid key, Operator op, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        key,
                        op}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/VisitorPages", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebRequest[] VisitorPages(string visitorIp) {
            object[] results = this.Invoke("VisitorPages", new object[] {
                        visitorIp});
            return ((WebRequest[])(results[0]));
        }
        
        /// <remarks/>
        public void VisitorPagesAsync(string visitorIp) {
            this.VisitorPagesAsync(visitorIp, null);
        }
        
        /// <remarks/>
        public void VisitorPagesAsync(string visitorIp, object userState) {
            if ((this.VisitorPagesOperationCompleted == null)) {
                this.VisitorPagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVisitorPagesOperationCompleted);
            }
            this.InvokeAsync("VisitorPages", new object[] {
                        visitorIp}, this.VisitorPagesOperationCompleted, userState);
        }
        
        private void OnVisitorPagesOperationCompleted(object arg) {
            if ((this.VisitorPagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VisitorPagesCompleted(this, new VisitorPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://focuscentric.com/Invite", RequestNamespace="http://focuscentric.com/", ResponseNamespace="http://focuscentric.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChatRequest Invite(System.Guid key, int operatorId, string visitorIp, string prompt) {
            object[] results = this.Invoke("Invite", new object[] {
                        key,
                        operatorId,
                        visitorIp,
                        prompt});
            return ((ChatRequest)(results[0]));
        }
        
        /// <remarks/>
        public void InviteAsync(System.Guid key, int operatorId, string visitorIp, string prompt) {
            this.InviteAsync(key, operatorId, visitorIp, prompt, null);
        }
        
        /// <remarks/>
        public void InviteAsync(System.Guid key, int operatorId, string visitorIp, string prompt, object userState) {
            if ((this.InviteOperationCompleted == null)) {
                this.InviteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInviteOperationCompleted);
            }
            this.InvokeAsync("Invite", new object[] {
                        key,
                        operatorId,
                        visitorIp,
                        prompt}, this.InviteOperationCompleted, userState);
        }
        
        private void OnInviteOperationCompleted(object arg) {
            if ((this.InviteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InviteCompleted(this, new InviteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://focuscentric.com/")]
    public partial class Operator {
        
        private int operatorIdField;
        
        private string operatorNameField;
        
        private string passwordField;
        
        private string emailField;
        
        private bool isOnlineField;
        
        private string departmentField;
        
        /// <remarks/>
        public int OperatorId {
            get {
                return this.operatorIdField;
            }
            set {
                this.operatorIdField = value;
            }
        }
        
        /// <remarks/>
        public string OperatorName {
            get {
                return this.operatorNameField;
            }
            set {
                this.operatorNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOnline {
            get {
                return this.isOnlineField;
            }
            set {
                this.isOnlineField = value;
            }
        }
        
        /// <remarks/>
        public string Department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://focuscentric.com/")]
    public partial class ChatMessage {
        
        private long messageIdField;
        
        private System.Guid chatIdField;
        
        private string nameField;
        
        private System.DateTime sentField;
        
        private string messageField;
        
        /// <remarks/>
        public long MessageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ChatId {
            get {
                return this.chatIdField;
            }
            set {
                this.chatIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Sent {
            get {
                return this.sentField;
            }
            set {
                this.sentField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://focuscentric.com/")]
    public partial class ChatRequest {
        
        private System.Guid chatIdField;
        
        private System.DateTime requestedField;
        
        private string visitorIpField;
        
        private string visitorNameField;
        
        private string visitorEmailField;
        
        private string visitorUserAgentField;
        
        private bool wasAcceptedField;
        
        private System.Nullable<System.DateTime> acceptedField;
        
        private System.Nullable<int> operatorIdField;
        
        private System.Nullable<System.DateTime> closedField;
        
        private string departmentField;
        
        /// <remarks/>
        public System.Guid ChatId {
            get {
                return this.chatIdField;
            }
            set {
                this.chatIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Requested {
            get {
                return this.requestedField;
            }
            set {
                this.requestedField = value;
            }
        }
        
        /// <remarks/>
        public string VisitorIp {
            get {
                return this.visitorIpField;
            }
            set {
                this.visitorIpField = value;
            }
        }
        
        /// <remarks/>
        public string VisitorName {
            get {
                return this.visitorNameField;
            }
            set {
                this.visitorNameField = value;
            }
        }
        
        /// <remarks/>
        public string VisitorEmail {
            get {
                return this.visitorEmailField;
            }
            set {
                this.visitorEmailField = value;
            }
        }
        
        /// <remarks/>
        public string VisitorUserAgent {
            get {
                return this.visitorUserAgentField;
            }
            set {
                this.visitorUserAgentField = value;
            }
        }
        
        /// <remarks/>
        public bool WasAccepted {
            get {
                return this.wasAcceptedField;
            }
            set {
                this.wasAcceptedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Accepted {
            get {
                return this.acceptedField;
            }
            set {
                this.acceptedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OperatorId {
            get {
                return this.operatorIdField;
            }
            set {
                this.operatorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Closed {
            get {
                return this.closedField;
            }
            set {
                this.closedField = value;
            }
        }
        
        /// <remarks/>
        public string Department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://focuscentric.com/")]
    public partial class WebRequest {
        
        private int requestIdField;
        
        private string pageRequestedField;
        
        private string domainNameField;
        
        private System.DateTime requestedField;
        
        private string referrerField;
        
        private string visitorUserAgentField;
        
        private string visitorIpField;
        
        /// <remarks/>
        public int RequestId {
            get {
                return this.requestIdField;
            }
            set {
                this.requestIdField = value;
            }
        }
        
        /// <remarks/>
        public string PageRequested {
            get {
                return this.pageRequestedField;
            }
            set {
                this.pageRequestedField = value;
            }
        }
        
        /// <remarks/>
        public string DomainName {
            get {
                return this.domainNameField;
            }
            set {
                this.domainNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Requested {
            get {
                return this.requestedField;
            }
            set {
                this.requestedField = value;
            }
        }
        
        /// <remarks/>
        public string Referrer {
            get {
                return this.referrerField;
            }
            set {
                this.referrerField = value;
            }
        }
        
        /// <remarks/>
        public string VisitorUserAgent {
            get {
                return this.visitorUserAgentField;
            }
            set {
                this.visitorUserAgentField = value;
            }
        }
        
        /// <remarks/>
        public string VisitorIp {
            get {
                return this.visitorIpField;
            }
            set {
                this.visitorIpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LogInCompletedEventHandler(object sender, LogInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Operator Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Operator)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWebSiteRequestsCompletedEventHandler(object sender, GetWebSiteRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebSiteRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebSiteRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebRequest[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebRequest[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetOperatorStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetChatRequestsCompletedEventHandler(object sender, GetChatRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChatRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChatRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChatRequest[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChatRequest[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AcceptRequestCompletedEventHandler(object sender, AcceptRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveChatRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetChatMessagesCompletedEventHandler(object sender, GetChatMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChatMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChatMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChatMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChatMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsTypingCompletedEventHandler(object sender, IsTypingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsTypingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsTypingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetTypingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOnlineOperatorCompletedEventHandler(object sender, GetOnlineOperatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOnlineOperatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOnlineOperatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Operator[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Operator[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransferChatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HasNewMessageCompletedEventHandler(object sender, HasNewMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasNewMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasNewMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOperatorsCompletedEventHandler(object sender, GetOperatorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperatorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperatorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Operator[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Operator[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveCompletedEventHandler(object sender, SaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteCompletedEventHandler(object sender, DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VisitorPagesCompletedEventHandler(object sender, VisitorPagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VisitorPagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VisitorPagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebRequest[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebRequest[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void InviteCompletedEventHandler(object sender, InviteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InviteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InviteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChatRequest Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChatRequest)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591